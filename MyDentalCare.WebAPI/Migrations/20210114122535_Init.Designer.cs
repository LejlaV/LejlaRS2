// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyDentalCare.WebAPI.Database;

namespace MyDentalCare.WebAPI.Migrations
{
    [DbContext(typeof(MyDentalCareContext))]
    [Migration("20210114122535_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Adresa", b =>
                {
                    b.Property<int>("AdresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdresaId");

                    b.HasIndex("GradId");

                    b.ToTable("Adresa");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Clanak", b =>
                {
                    b.Property<int>("ClanakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ClanakId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Clanak");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Dijagnoza", b =>
                {
                    b.Property<int>("DijagnozaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DijagnozaId");

                    b.ToTable("Dijagnoza");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Kategorija", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorija");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloga");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Lijek", b =>
                {
                    b.Property<int>("LijekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uputstvo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LijekId");

                    b.ToTable("Lijek");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.MedicinskiKarton", b =>
                {
                    b.Property<int>("MedicinskiKartonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int");

                    b.HasKey("MedicinskiKartonId");

                    b.HasIndex("PacijentId");

                    b.ToTable("MedicinskiKarton");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanakId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ocjena1")
                        .HasColumnName("ocjena")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int");

                    b.HasKey("OcjenaId");

                    b.HasIndex("ClanakId");

                    b.HasIndex("PacijentId");

                    b.ToTable("Ocjena");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Pacijent", b =>
                {
                    b.Property<int>("PacijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PacijentId");

                    b.ToTable("Pacijent");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Pregled", b =>
                {
                    b.Property<int>("PregledId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<int>("DijagnozaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("LijekId")
                        .HasColumnType("int");

                    b.Property<int>("MedicinskiKartonId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.HasKey("PregledId");

                    b.HasIndex("DijagnozaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("LijekId");

                    b.HasIndex("MedicinskiKartonId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Pregled");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktivna")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int");

                    b.Property<string>("Razlog")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("PacijentId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.StomatoloskaOrdinacija", b =>
                {
                    b.Property<int>("StomatoloskaOrdinacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdresaId")
                        .HasColumnType("int");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RadnoVrijemeDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RadnoVrijemeOd")
                        .HasColumnType("datetime2");

                    b.HasKey("StomatoloskaOrdinacijaId");

                    b.HasIndex("AdresaId");

                    b.ToTable("StomatoloskaOrdinacija");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Usluga", b =>
                {
                    b.Property<int>("UslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UslugaId");

                    b.ToTable("Usluga");
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Adresa", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Grad", "Grad")
                        .WithMany("Adresa")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Adresa_GradId")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Clanak", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Kategorija", "Kategorija")
                        .WithMany("Clanak")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Clanak_KategorijaId")
                        .IsRequired();

                    b.HasOne("MyDentalCare.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Clanak")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Clanak_KorisnikId")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Grad", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Drzava", "Drzava")
                        .WithMany("Grad")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Grad_DrzavaId")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.KorisnikUloga", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikUloga")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisnikUloga_KorisnikId")
                        .IsRequired();

                    b.HasOne("MyDentalCare.WebAPI.Database.Uloga", "Uloga")
                        .WithMany("KorisnikUloga")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisnikUloga_UlogaId")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.MedicinskiKarton", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Pacijent", "Pacijent")
                        .WithMany("MedicinskiKarton")
                        .HasForeignKey("PacijentId")
                        .HasConstraintName("FK_MedicinskiKarton_PacijentId")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Ocjena", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Clanak", "Clanak")
                        .WithMany("Ocjena")
                        .HasForeignKey("ClanakId")
                        .HasConstraintName("FK_Ocjena_ClanakId")
                        .IsRequired();

                    b.HasOne("MyDentalCare.WebAPI.Database.Pacijent", "Pacijent")
                        .WithMany("Ocjena")
                        .HasForeignKey("PacijentId")
                        .HasConstraintName("FK_Ocjena_PacijentId")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Pregled", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Dijagnoza", "Dijagnoza")
                        .WithMany("Pregled")
                        .HasForeignKey("DijagnozaId")
                        .HasConstraintName("FK_Pregled_DijagnozaId")
                        .IsRequired();

                    b.HasOne("MyDentalCare.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Pregled")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Pregled_KorisnikId")
                        .IsRequired();

                    b.HasOne("MyDentalCare.WebAPI.Database.Lijek", "Lijek")
                        .WithMany("Pregled")
                        .HasForeignKey("LijekId")
                        .HasConstraintName("FK_Pregled_LijekId")
                        .IsRequired();

                    b.HasOne("MyDentalCare.WebAPI.Database.MedicinskiKarton", "MedicinskiKarton")
                        .WithMany("Pregled")
                        .HasForeignKey("MedicinskiKartonId")
                        .HasConstraintName("FK_Pregled_MedicinskiKartonId")
                        .IsRequired();

                    b.HasOne("MyDentalCare.WebAPI.Database.Rezervacija", "Rezervacija")
                        .WithMany("Pregled")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK_Pregled_RezervacijaId")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.Rezervacija", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Pacijent", "Pacijent")
                        .WithMany("Rezervacija")
                        .HasForeignKey("PacijentId")
                        .HasConstraintName("FK_Rezervacija_PacijentId")
                        .IsRequired();

                    b.HasOne("MyDentalCare.WebAPI.Database.Usluga", "Usluga")
                        .WithMany("Rezervacija")
                        .HasForeignKey("UslugaId")
                        .HasConstraintName("FK_Rezervacija_UslugaId")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDentalCare.WebAPI.Database.StomatoloskaOrdinacija", b =>
                {
                    b.HasOne("MyDentalCare.WebAPI.Database.Adresa", "Adresa")
                        .WithMany("StomatoloskaOrdinacija")
                        .HasForeignKey("AdresaId")
                        .HasConstraintName("FK_StomatoloskaOrdinacija_AdresaId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
